<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse" name="exacttarget" transports="https,http" statistics="disable"
   trace="disable" startOnLoad="true">
   <target>
      <inSequence>
         <property xmlns:ns="wso2.connector.exacttarget" name="apiUrl" expression="//ns:apiUrl/text()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="accessToken" expression="//ns:accessToken/text()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="method" expression="//ns:method/text()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="properties" expression="//ns:properties/text()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="emailFilter" expression="//ns:emailFilter/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="triggeredSendObjects" expression="//ns:triggeredSendObjects/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="triggeredSendDefinitionObjects" expression="//ns:triggeredSendDefinitionObjects/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="createOptions" expression="//ns:createOptions/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="updateOptions" expression="//ns:updateOptions/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="subscriberFilter" expression="//ns:subscriberFilter/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="createOptions" expression="//ns:createOptions/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="subscriberObjects" expression="//ns:subscriberObjects/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="customerKey" expression="//ns:customerKey/text()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="dataExtensionFilter" expression="//ns:dataExtensionFilter/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="openEventsFilter" expression="//ns:openEventsFilter/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="sendClassificationFilter" expression="//ns:sendClassificationFilter/node()" />
         <property xmlns:ns="wso2.connector.exacttarget" name="dataExtensionObjects" expression="//ns:dataExtensionObjects/node()" />
         <switch source="get-property('method')">
            <case regex="listEmails">
               <exacttarget.init>
                  <accessToken>{$ctx:accessToken}</accessToken>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
               </exacttarget.init>
               <exacttarget.listEmails>
                  <properties>{$ctx:properties}</properties>
                  <emailFilter>{$ctx:emailFilter}</emailFilter>
               </exacttarget.listEmails>
            </case>
            <case regex="sendTriggeredEmail">
               <exacttarget.init>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
                  <accessToken>{$ctx:accessToken}</accessToken>
               </exacttarget.init>
               <exacttarget.sendTriggeredEmail>
                  <triggeredSendObjects>{$ctx:triggeredSendObjects}</triggeredSendObjects>
                  <createOptions>{$ctx:createOptions}</createOptions>
               </exacttarget.sendTriggeredEmail>
            </case>
            <case regex="updateTriggeredSendDefinition">
               <exacttarget.init>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
                  <accessToken>{$ctx:accessToken}</accessToken>
               </exacttarget.init>
               <exacttarget.updateTriggeredSendDefinition>
                  <triggeredSendDefinitionObjects>{$ctx:triggeredSendDefinitionObjects}</triggeredSendDefinitionObjects>
                  <updateOptions>{$ctx:updateOptions}</updateOptions>
               </exacttarget.updateTriggeredSendDefinition>
            </case>
            <case regex="listSubscribers">
               <exacttarget.init>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
                  <accessToken>{$ctx:accessToken}</accessToken>
               </exacttarget.init>
               <exacttarget.listSubscribers>
                  <properties>{$ctx:properties}</properties>
                  <subscriberFilter>{$ctx:subscriberFilter}</subscriberFilter>
               </exacttarget.listSubscribers>
            </case>
            <case regex="createTriggeredSendDefinition">
               <exacttarget.init>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
                  <accessToken>{$ctx:accessToken}</accessToken>
               </exacttarget.init>
               <exacttarget.createTriggeredSendDefinition>
                  <triggeredSendDefinitionObjects>{$ctx:triggeredSendDefinitionObjects}</triggeredSendDefinitionObjects>
                  <createOptions>{$ctx:createOptions}</createOptions>
               </exacttarget.createTriggeredSendDefinition>
            </case>
            <case regex="updateSubscriberAttributes">
               <exacttarget.init>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
                  <accessToken>{$ctx:accessToken}</accessToken>
               </exacttarget.init>
               <exacttarget.updateSubscriberAttributes>
                  <subscriberObjects>{$ctx:subscriberObjects}</subscriberObjects>
                  <updateOptions>{$ctx:updateOptions}</updateOptions>
               </exacttarget.updateSubscriberAttributes>
            </case>
            <case regex="listDataExtensionObjects">
               <exacttarget.init>
                  <accessToken>{$ctx:accessToken}</accessToken>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
               </exacttarget.init>
               <exacttarget.listDataExtensionObjects>
                  <properties>{$ctx:properties}</properties>
                  <dataExtensionFilter>{$ctx:dataExtensionFilter}</dataExtensionFilter>
                  <customerKey>{$ctx:customerKey}</customerKey>
               </exacttarget.listDataExtensionObjects>
            </case>
            <case regex="listOpenEvents">
               <exacttarget.init>
                  <accessToken>{$ctx:accessToken}</accessToken>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
               </exacttarget.init>
               <exacttarget.listOpenEvents>
                  <openEventsFilter>{$ctx:openEventsFilter}</openEventsFilter>
                  <properties>{$ctx:properties}</properties>
               </exacttarget.listOpenEvents>
            </case>
            <case regex="listsendClassifications">
               <exacttarget.init>
                  <accessToken>{$ctx:accessToken}</accessToken>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
               </exacttarget.init>
               <exacttarget.listsendClassifications>
                  <properties>{$ctx:properties}</properties>
                  <sendClassificationFilter>{$ctx:sendClassificationFilter}</sendClassificationFilter>
               </exacttarget.listsendClassifications>
            </case>
            <case regex="insertDataToDataExtension">
               <exacttarget.init>
                  <accessToken>{$ctx:accessToken}</accessToken>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
               </exacttarget.init>
               <exacttarget.insertDataToDataExtension>
                  <dataExtensionObjects>{$ctx:dataExtensionObjects}</dataExtensionObjects>
                  <createOptions>{$ctx:createOptions}</createOptions>
               </exacttarget.insertDataToDataExtension>
            </case>
         </switch>
         <respond />
      </inSequence>
      <outSequence>
         <log></log>
         <send></send>
      </outSequence>
   </target>
</proxy>