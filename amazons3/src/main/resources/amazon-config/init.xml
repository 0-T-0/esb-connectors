<template name="init" xmlns="http://ws.apache.org/ns/synapse">
	<parameter name="accessKeyId" description="AWS access key ID" />
	<parameter name="secretAccessKey" description="AWS secret access key" />
	<parameter name="methodType" description="HTTP method type" />
	<parameter name="contentLength" description="Length of the message" />
	<parameter name="contentType" description="Content type of the resource" />
	<parameter name="contentMD5" description="Base64 encoded 128-bit MD5 digest" />
	<parameter name="expect" description="Application uses 100-continue" />
	<parameter name="host" description="For path-style requests" />
	<parameter name="xAmzDate" description="Current date and time" />
	<parameter name="xAmzSecurityToken" description="The security token" />
	<parameter name="bucketName" description="Name of the buckut" />
	<parameter name="uriRemainder" description="Remains part of the uri" />

	<parameter name="xAmzAcl" description="Name of the xAmzAcl" />
	<parameter name="xAmzGrantRead" description="Name of the xAmzFrantRead" />
	<parameter name="xAmzGrantWrite" description="Name of the xAmzGrantWrite" />
	<parameter name="xAmzGrantReadAcp" description="Name of the xAmzGrantReadAcp" />
	<parameter name="xAmzGrantWriteAcp" description="Name of the xAmzGrantWriteAcp" />
	<parameter name="xAmzGrantFullControl" description="Name of the xAmzGrantFullControl" />
		
	<parameter name="xAmzMeta" description="Name of the xAmzMeta" />
	<parameter name="xAmzServeEncryption" description="Name of the xAmzServeEncryption" />
	<parameter name="xAmzStorageClass" description="Name of the xAmzStorageClass" />

	<parameter name="xAmzWebsiteLocation" description="Name of the xAmzWebsiteLocation" />
	
	<parameter name="xAmzMfa" description="Name of the expect" />
	
	<!-- params that are required for createObjectCopy -->
	<parameter name="xAmzCopySource"
		description="The name of the source bucket and key name of the source object, separated by a slash" />
	<parameter name="xAmzMetadataDirective"
		description="Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request." />
	<parameter name="xAmzCopySourceIfMatch"
		description="Copies the object if its entity tag (ETag) matches the specified tag" />
	<parameter name="xAmzCopySourceIfNoneMatch"
		description="Copies the object if its entity tag (ETag) is different than the specified ETag" />
	<parameter name="xAmzCopySourceIfUnmodifiedSince"
		description="Copies the object if it hasn't been modified since the specified time" />
	<parameter name="xAmzCopySourceIfModifiedSince"
		description="Copies the object if it has been modified since the specified time" />
	<parameter name="xAmzServerSideEncryption"
		description="Specifies the server-side encryption algorithm to use when Amazon S3 creates the target object." />
<!--<parameter name="xAmzStorageClass"
		description="RRS enables customers to reduce their costs by storing noncritical, reproducible data at lower levels of redundancy than Amazon S3's standard storage." />
	<parameter name="xAmzWebsiteRedirectLocation"
		description="If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL." />
 -->		
	<sequence>
		<property name="uri.var.accessKeyId" expression="$func:accessKeyId" />
		<property name="uri.var.secretAccessKey" expression="$func:secretAccessKey" />
		<property name="uri.var.methodType" expression="$func:methodType" />
		<property name="uri.var.contentLength" expression="$func:contentLength" />
		<property name="uri.var.contentType" expression="$func:contentType" />
		<property name="uri.var.contentMD5" expression="$func:contentMD5" />
		<property name="uri.var.expect" expression="$func:expect" />
		<property name="uri.var.host" expression="$func:host" />
		<property name="uri.var.xAmzDate" expression="$func:xAmzDate" />
		<property name="uri.var.xAmzSecurityToken" expression="$func:xAmzSecurityToken" />
		<property name="uri.var.bucketName" expression="$func:bucketName" />
		<property name="uri.var.uriRemainder" expression="$func:uriRemainder" />
		
		<property name="uri.var.xAmzAcl" expression="$func:xAmzAcl" />
		<property name="uri.var.xAmzGrantRead" expression="$func:xAmzGrantRead" />
		<property name="uri.var.xAmzGrantWrite" expression="$func:xAmzGrantWrite" />
		<property name="uri.var.xAmzGrantReadAcp" expression="$func:xAmzGrantReadAcp" />
		<property name="uri.var.xAmzGrantWriteAcp" expression="$func:xAmzGrantWriteAcp" />
		<property name="uri.var.xAmzGrantFullControl" expression="$func:xAmzGrantFullControl" />
				
		<property name="uri.var.xAmzMeta" expression="$func:xAmzMeta" />
		<property name="uri.var.xAmzServeEncryption" expression="$func:xAmzServeEncryption" />
		<property name="uri.var.xAmzStorageClass" expression="$func:xAmzStorageClass" />
		<property name="uri.var.xAmzWebsiteLocation" expression="$func:xAmzWebsiteLocation" />
		
		<property name="uri.var.xAmzMfa" expression="$func:xAmzMfa" />
		
		<property name="uri.var.xAmzCopySource" expression="$func:xAmzCopySource" />
		<property name="uri.var.xAmzMetadataDirective" expression="$func:xAmzMetadataDirective" />
		<property name="uri.var.xAmzCopySourceIfMatch" expression="$func:xAmzCopySourceIfMatch" />
		<property name="uri.var.xAmzCopySourceIfNoneMatch" expression="$func:xAmzCopySourceIfNoneMatch" />
		<property name="uri.var.xAmzCopySourceIfUnmodifiedSince" expression="$func:xAmzCopySourceIfUnmodifiedSince" />
		<property name="uri.var.xAmzCopySourceIfModifiedSince" expression="$func:xAmzCopySourceIfModifiedSince" />
		<!--  <property name="uri.var.xAmzServerSideEncryption" expression="$func:xAmzServerSideEncryption" />-->
<!-- 	<property name="uri.var.xAmzStorageClass" expression="$func:xAmzStorageClass" />
 		<property name="uri.var.xAmzWebsiteRedirectLocation" expression="$func:xAmzWebsiteRedirectLocation" />		
-->
		<class name="org.wso2.carbon.connector.amazons3.auth.AuthenticationHelper" />

	</sequence>
</template>