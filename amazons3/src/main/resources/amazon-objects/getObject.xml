<template name="getObject" xmlns="http://ws.apache.org/ns/synapse">
	<parameter name="bucketUrl" description="End point for the request" />
	<parameter name="query" description="Query for search parameters" />
	<parameter name="responseContentType" description="Content-Type header of the response" />
	<parameter name="responseContentLanguage" description="Content-Language header of the response" />
	<parameter name="responseExpires" description="Expires header of the response" />
	<parameter name="responseCacheControl" description="Cache-Control header of the response" />
	<parameter name="responseContentDisposition" description="Content-Disposition header of the response" />
	<parameter name="responseContentEncoding" description="Content-Encoding header of the response" />
	<parameter name="range" description="HTTP range header" />
	<parameter name="ifModifiedSince" description="Return the object only if it has been modified" />
	<parameter name="ifUnmodifiedSince" description="Return the object only if it has not been modified" />
	<parameter name="ifMatch" description="Return the object only if its ETag is the same" />
	<parameter name="ifNoneMatch" description="Return the object only if its ETag is not same" />

	<sequence>
		<property name="uri.var.bucketUrl" expression="$func:bucketUrl" />
		<property name="uri.var.query" expression="$func:query" />
		<property name="uri.var.responseContentType" expression="$func:responseContentType" />
		<property name="uri.var.responseContentLanguage" expression="$func:responseContentLanguage" />
		<property name="uri.var.responseExpires" expression="$func:responseExpires" />
		<property name="uri.var.responseCacheControl" expression="$func:responseCacheControl" />
		<property name="uri.var.responseContentDisposition" expression="$func:responseContentDisposition" />
		<property name="uri.var.responseContentEncoding" expression="$func:responseContentEncoding" />
		<property name="uri.var.range" expression="$func:range" />
		<property name="uri.var.ifModifiedSince" expression="$func:ifModifiedSince" />
		<property name="uri.var.ifUnmodifiedSince" expression="$func:ifUnmodifiedSince" />
		<property name="uri.var.ifMatch" expression="$func:ifMatch" />
		<property name="uri.var.ifNoneMatch" expression="$func:ifNoneMatch" />

		<filter
			xpath="(not(get-property('uri.var.range') = '' or (not(string(get-property('uri.var.range'))))))">
			<then>
				<property xmlns:ns2="http://org.apache.synapse/xsd"
					xmlns:ns="http://org.apache.synapse/xsd" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"
					name="Range" expression="get-property('uri.var.range')" scope="transport"
					type="STRING" />
			</then>
		</filter>

		<filter
			xpath="(not(get-property('uri.var.ifModifiedSince') = '' or (not(string(get-property('uri.var.ifModifiedSince'))))))">
			<then>
				<property xmlns:ns2="http://org.apache.synapse/xsd"
					xmlns:ns="http://org.apache.synapse/xsd" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"
					name="If-Modified-Since" expression="get-property('uri.var.ifModifiedSince')"
					scope="transport" type="STRING" />
			</then>
		</filter>

		<filter
			xpath="(not(get-property('uri.var.ifUnmodifiedSince') = '' or (not(string(get-property('uri.var.ifUnmodifiedSince'))))))">
			<then>
				<property xmlns:ns2="http://org.apache.synapse/xsd"
					xmlns:ns="http://org.apache.synapse/xsd" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"
					name="If-Unmodified-Since" expression="get-property('uri.var.ifUnmodifiedSince')"
					scope="transport" type="STRING" />
			</then>
		</filter>

		<filter
			xpath="(not(get-property('uri.var.ifMatch') = '' or (not(string(get-property('uri.var.ifMatch'))))))">
			<then>
				<property xmlns:ns2="http://org.apache.synapse/xsd"
					xmlns:ns="http://org.apache.synapse/xsd" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"
					name="If-Match" expression="get-property('uri.var.ifMatch')" scope="transport"
					type="STRING" />
			</then>
		</filter>

		<filter
			xpath="(not(get-property('uri.var.ifNoneMatch') = '' or (not(string(get-property('uri.var.ifNoneMatch'))))))">
			<then>
				<property xmlns:ns2="http://org.apache.synapse/xsd"
					xmlns:ns="http://org.apache.synapse/xsd" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"
					name="If-None-Match" expression="get-property('uri.var.ifNoneMatch')"
					scope="transport" type="STRING" />
			</then>
		</filter>

		<filter
			xpath="(not(get-property('uri.var.responseContentType') = '' or  (not(string(get-property('uri.var.responseContentType'))))))">
			<then>
				<property name="uri.var.query"
					expression="fn:concat(get-property('uri.var.query'),'response-content-type','=',get-property('uri.var.responseContentType'),'&amp;')" />
			</then>
		</filter>

		<filter
			xpath="(not(get-property('uri.var.responseContentLanguage') = '' or  (not(string(get-property('uri.var.responseContentLanguage'))))))">
			<then>
				<property name="uri.var.query"
					expression="fn:concat(get-property('uri.var.query'),'response-content-language','=',get-property('uri.var.responseContentLanguage'),'&amp;')" />
			</then>
		</filter>

		<filter
			xpath="(not(get-property('uri.var.responseExpires') = '' or  (not(string(get-property('uri.var.responseExpires'))))))">
			<then>
				<property name="uri.var.query"
					expression="fn:concat(get-property('uri.var.query'),'response-expires','=',get-property('uri.var.responseExpires'),'&amp;')" />
			</then>
		</filter>

		<filter
			xpath="(not(get-property('uri.var.responseCacheControl') = '' or  (not(string(get-property('uri.var.responseCacheControl'))))))">
			<then>
				<property name="uri.var.query"
					expression="fn:concat(get-property('uri.var.query'),'response-cache-control','=',get-property('uri.var.responseCacheControl'),'&amp;')" />
			</then>
		</filter>

		<filter
			xpath="(not(get-property('uri.var.responseContentDisposition') = '' or  (not(string(get-property('uri.var.responseContentDisposition'))))))">
			<then>
				<property name="uri.var.query"
					expression="fn:concat(get-property('uri.var.query'),'response-content-disposition','=',get-property('uri.var.responseContentDisposition'),'&amp;')" />
			</then>
		</filter>

		<filter
			xpath="(not(get-property('uri.var.responseContentEncoding') = '' or  (not(string(get-property('uri.var.responseContentEncoding'))))))">
			<then>
				<property name="uri.var.query"
					expression="fn:concat(get-property('uri.var.query'),'response-content-encoding','=',get-property('uri.var.responseContentEncoding'),'&amp;')" />
			</then>
		</filter>

		<property name="DISABLE_CHUNKING" value="true" scope="axis2" />
		
		<call>
			<endpoint>
				<http method="get"
					uri-template="{uri.var.bucketUrl}{uri.var.uriRemainder}?{uri.var.query}" />

			</endpoint>
		</call>

	</sequence>
</template>