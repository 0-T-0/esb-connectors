<template name="getObjectMetaData" xmlns="http://ws.apache.org/ns/synapse">

	<parameter name="bucketUrl" 
		description="Full Url of the amazon s3" />
	<parameter name="range" 
		description="Downloads the specified range bytes of an object. " />		
	<parameter name="ifModifiedSince" 
		description="Return the object only if it has been modified since the specified time, otherwise return a 304" />		
	<parameter name="ifUnmodifiedSince" 
		description="Return the object only if it has not been modified since the specified time, otherwise return a 412" />		
	<parameter name="ifMatch" 
		description="Return the object only if its entity tag ETag is the same as the one specified; otherwise, return a 412" />		
	<parameter name="ifNoneMatch" 
		description="Return the object only if its entity tag ETag is different from the one specified; otherwise, return a 304" />		

	<sequence>
		
		<property name="uri.var.bucketUrl" expression="$func:bucketUrl" />
		<property name="uri.var.range" expression="$func:range" />
		<property name="uri.var.ifModifiedSince" expression="$func:ifModifiedSince" />
		<property name="uri.var.ifUnmodifiedSince" expression="$func:ifUnmodifiedSince" />
		<property name="uri.var.ifMatch" expression="$func:ifMatch" />
		<property name="uri.var.ifNoneMatch" expression="$func:ifNoneMatch" />
					
<!--   		<property name="FORCE_HTTP_1.0" value="true" scope="axis2" /> 		 -->
		<property name="DISABLE_CHUNKING" value="true" scope="axis2" />
 
 		<filter
			xpath="(not(get-property('uri.var.range') = '' or  (not(string(get-property('uri.var.range'))))))">
			<then>
				<property xmlns:ns2="http://org.apache.synapse/xsd"
					xmlns:ns="http://org.apache.synapse/xsd" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"
					name="Range" expression="get-property('uri.var.range')"
					scope="transport" type="STRING" />
			</then>
		</filter>
		
		<filter
			xpath="(not(get-property('uri.var.ifModifiedSince') = '' or  (not(string(get-property('uri.var.ifModifiedSince'))))))">
			<then>
				<property xmlns:ns2="http://org.apache.synapse/xsd"
					xmlns:ns="http://org.apache.synapse/xsd" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"
					name="If-Modified-Since" expression="get-property('uri.var.ifModifiedSince')"
					scope="transport" type="STRING" />
			</then>
		</filter>
		
		<filter
			xpath="(not(get-property('uri.var.ifUnmodifiedSince') = '' or  (not(string(get-property('uri.var.ifUnmodifiedSince'))))))">
			<then>
				<property xmlns:ns2="http://org.apache.synapse/xsd"
					xmlns:ns="http://org.apache.synapse/xsd" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"
					name="If-Unmodified-Since" expression="get-property('uri.var.ifUnmodifiedSince')"
					scope="transport" type="STRING" />
			</then>
		</filter>
		
		<filter
			xpath="(not(get-property('uri.var.ifMatch') = '' or  (not(string(get-property('uri.var.ifMatch'))))))">
			<then>
				<property xmlns:ns2="http://org.apache.synapse/xsd"
					xmlns:ns="http://org.apache.synapse/xsd" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"
					name="If-Match" expression="get-property('uri.var.ifMatch')"
					scope="transport" type="STRING" />
			</then>
		</filter>	
						
		<filter
			xpath="(not(get-property('uri.var.ifNoneMatch') = '' or  (not(string(get-property('uri.var.ifNoneMatch'))))))">
			<then>
				<property xmlns:ns2="http://org.apache.synapse/xsd"
					xmlns:ns="http://org.apache.synapse/xsd" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope"
					name="If-None-Match" expression="get-property('uri.var.ifNoneMatch')"
					scope="transport" type="STRING" />
			</then>
		</filter>			
		
		<call>
			<endpoint>		
				<http method="head" uri-template="{uri.var.bucketUrl}{uri.var.uriRemainder}" />
			</endpoint>
		</call>
	
	</sequence>
</template>