<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse" name="AmazonS3_createBucketPolicy" transports="https,http"
	statistics="disable" trace="disable" startOnLoad="true">
	<target>
		<inSequence onError="faultHandlerSeq">
			<property name="accessKeyId" expression="json-eval($.accessKeyId)" />
			<property name="secretAccessKey" expression="json-eval($.secretAccessKey)" />
			<property name="methodType" expression="json-eval($.methodType)" />
			<property name="contentType" expression="json-eval($.contentType)" />
			<property name="isXAmzDate" expression="json-eval($.isXAmzDate)" />
			<property name="bucketName" expression="json-eval($.bucketName)" />
			<property name="bucketUrl" expression="json-eval($.bucketUrl)" />
			<property name="bucketPolicy" expression="json-eval($.bucketPolicy)" />
			<property name="contentLength" expression="json-eval($.contentLength)" />
			<property name="contentMD5" expression="json-eval($.contentMD5)" />
			<property name="expect" expression="json-eval($.expect)" />
			<property name="host" expression="json-eval($.host)" />
			<property name="xAmzSecurityToken" expression="json-eval($.xAmzSecurityToken)" />

			<amazons3.init>
				<accessKeyId>{$ctx:accessKeyId}</accessKeyId>
				<secretAccessKey>{$ctx:secretAccessKey}</secretAccessKey>
				<methodType>{$ctx:methodType}</methodType>
				<contentType>{$ctx:contentType}</contentType>
				<isXAmzDate>{$ctx:isXAmzDate}</isXAmzDate>
				<bucketName>{$ctx:bucketName}</bucketName>
				<contentMD5>{$ctx:contentMD5}</contentMD5>
				<xAmzSecurityToken>{$ctx:xAmzSecurityToken}</xAmzSecurityToken>
				<host>{$ctx:host}</host>
				<expect>{$ctx:expect}</expect>
				<contentLength>{$ctx:contentLength}</contentLength>
			</amazons3.init>
			<amazons3.createBucketPolicy>
				<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
				<bucketPolicy>{$ctx:bucketPolicy}</bucketPolicy>
			</amazons3.createBucketPolicy>
			
			<!-- Change Response Content-Type to json -->
			<property name="Content-Type" scope="transport" value="application/json" />
			
			 <filter source="$axis2:HTTP_SC" regex="^[^2][0-9][0-9]">
            <then>
               <switch source="$axis2:HTTP_SC">
                  <case regex="401">
                     <property name="ERROR_CODE" value="600401"/>					  
					 <property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)"/>
                     <property name="error_description" expression="json-eval($.Error.Message)"/>
                  </case>
                  <case regex="404">
                     <property name="ERROR_CODE" value="600404"/>					  
					 <property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)"/>
                     <property name="error_description" expression="json-eval($.Error.Message)"/>
                  </case>
				  <case regex="403">
                     <property name="ERROR_CODE" value="600403"/>					  
					 <property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)"/>
                     <property name="error_description" expression="json-eval($.Error.Message)"/>
                  </case>
                  <case regex="400">
                     <property name="ERROR_CODE" value="600400"/>					  
					 <property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)"/>
                     <property name="error_description" expression="json-eval($.Error.Message)"/>
                  </case>
                  <case regex="500">
                     <property name="ERROR_CODE" value="600500"/>  
					 <property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)"/>
                     <property name="error_description" expression="json-eval($.Error.Message)"/>
                  </case>
                  <default> 
				     <property name="ERROR_CODE" expression="$axis2:HTTP_SC"/>
                     <property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)"/>
                     <property name="error_description" expression="json-eval($.Error.Message)"/>
                  </default>
               </switch>
               <sequence key="faultHandlerSeq" />
            </then>
         </filter>
			<respond />
		</inSequence>
		<outSequence>
			<log />
			<send />
		</outSequence> 
	</target>
	<description />
</proxy>