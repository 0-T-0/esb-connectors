<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse" name="searchPost"
	transports="https,http" statistics="disable" trace="disable"
	startOnLoad="true">
	<target>
		<inSequence>
			<property name="apiKey" expression="json-eval($.apiKey)" />
			<property name="accessToken" expression="json-eval($.accessToken)" />
			<property expression="json-eval($.blogID)" name="blogID" />
			<property expression="json-eval($.query)" name="query" />
			<property expression="json-eval($.fetchBodies)" name="fetchBodies" />
			<property expression="json-eval($.orderBy)" name="orderBy" />
			<property expression="json-eval($.fields)" name="fields" />
			<blogger.init>
				<apiKey>{$ctx:apiKey}</apiKey>
				<accessToken>{$ctx:accessToken}</accessToken>
			</blogger.init>
			<log />
			<blogger.searchPost>
				<blogID>{$ctx:blogID}</blogID>
				<query>{$ctx:query}</query>
				<fetchBodies>{$ctx:fetchBodies}</fetchBodies>
				<orderBy>{$ctx:orderBy}</orderBy>
				<fields>{$ctx:fields}</fields>
			</blogger.searchPost>
			<filter source="$axis2:HTTP_SC" regex="^[^2][0-9][0-9]">
				<then>
					<property name="ERROR_CODE" expression="$axis2:HTTP_SC" />
					<switch source="$axis2:HTTP_SC">
						<case regex="400">
							<property name="ERROR_MESSAGE" value="Bad Request" />
							<property name="issue" expression="json-eval($.details[0].issue)" />
							<property name="fieldName" expression="json-eval($.details[0].field)" />
							<filter
								xpath="get-property('issue') = '' or (not(string(get-property('issue'))))">
								<then>
									<property name="error_description" expression="json-eval($.message)" />
								</then>
								<else>
									<property name="error_description"
										expression="fn:concat( get-property('fieldName'), ' - ',get-property('issue'))" />
								</else>
							</filter>
						</case>
						<case regex="401">
							<property name="ERROR_MESSAGE" value="Unauthorized" />
						</case>
						<case regex="404">
							<property name="ERROR_MESSAGE" value="Not Found" />
						</case>
					</switch>
				</then>
			</filter>
			<respond />
		</inSequence>
		<outSequence>
			<log />
			<send />
		</outSequence>
	</target>
	<description />
</proxy>