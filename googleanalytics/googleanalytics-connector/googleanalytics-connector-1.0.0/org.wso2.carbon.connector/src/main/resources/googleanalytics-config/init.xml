<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- Method Documentation URL: https://developers.google.com/analytics -->
<template name="init" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="apiUrl" description="Base endpoint URL of GoogleAnalytics API." />
   <parameter name="accessToken" description="OAuth Token for GoogleAnalytics API." />
   <parameter name="ifNoneMatch" description="Etag value to use for returning a page of list values if the values have changed." />
   <parameter name="ifMatch" description="Etag value to use for returning a page of list values if the values have not changed." />
   <sequence>
      <property name="uri.var.apiUrl" expression="$func:apiUrl" />
      <property name="uri.var.accessToken" expression="$func:accessToken" />
      <property name="uri.var.ifMatch" expression="$func:ifMatch" />
      <property name="uri.var.ifNoneMatch" expression="$func:ifNoneMatch" />
      <!-- Boolean flag to keep track of whether the getAccessToken method is already called or not. -->
      <property name="uri.var.refreshTokenNegotiated" value="false" />
      <filter source="boolean(get-property('uri.var.apiUrl'))" regex="true">
         <then>
            <property name="uri.var.apiUrl" expression="get-property('uri.var.apiUrl')" />
         </then>
         <else>
            <property name="uri.var.apiUrl"
               expression="get-property('registry', 'connectors/GoogleAnalytics/apiUrl')" />
         </else>
      </filter>

      <!-- If the access token is not sent with the request, then get it from the registry. -->
      <filter source="boolean(get-property('uri.var.accessToken'))" regex="false">
         <then>
            <property name="uri.var.accessToken" expression="get-property('registry', 'connectors/GoogleAnalytics/accessToken')" />
            <!-- If the access token is not in the registry, then get a new access token by calling getAccessTokenFromRefreshToken
               method. -->
            <filter
               xpath="not(boolean(get-property('uri.var.accessToken'))) and get-property('uri.var.refreshTokenNegotiated') = 'false'">
               <then>
                  <googleanalytics.getAccessTokenFromRefreshToken />
               </then>
            </filter>
         </then>
      </filter>
      <filter source="boolean(get-property('uri.var.ifNoneMatch'))" regex="true">
         <then>
            <property name="uri.var.ifNoneMatch" expression="fn:concat('&quot;',get-property('uri.var.ifNoneMatch'),'&quot;')" />
            <header name="If-None-Match" expression="get-property('uri.var.ifNoneMatch')" scope="transport" />
         </then>
      </filter>
      <filter source="boolean(get-property('uri.var.ifMatch'))" regex="true">
         <then>
            <property name="uri.var.ifMatch" expression="fn:concat('&quot;',get-property('uri.var.ifMatch'),'&quot;')" />
            <header name="If-Match" expression="get-property('uri.var.ifMatch')" scope="transport" />
         </then>
      </filter>
      <header name="Authorization" expression="fn:concat('Bearer ', get-property('uri.var.accessToken'))" scope="transport" />
      <header name="Content-Type" value="application/json" scope="transport" />
   </sequence>
</template>
