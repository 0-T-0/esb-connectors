<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<template name="createAMail" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="to" description="The mail to whom to be sent "/>
    <parameter name="subject" description="Subject of the message"/>
    <parameter name="from" description="Sender id of the mail"/>
    <parameter name="messageBody" description="Entire message body"/>
    <parameter name="cc" description="mail id's to cc"/>
    <parameter name="bcc" description="mail id's to bcc"/>
    <sequence>
        <property name="uri.var.to" expression="$func:to"/>
        <property name="uri.var.subject" expression="$func:subject"/>
        <property name="uri.var.from" expression="$func:from"/>
        <property name="uri.var.messageBody" expression="$func:messageBody"/>
        <property name="uri.var.cc" expression="$func:cc"/>
        <property name="uri.var.bcc" expression="$func:bcc"/>
        <property name="gmailParameters" value=""/>
        <filter
                xpath="get-property('uri.var.to') = '' or  not(string(get-property('uri.var.to')))">
            <then>
                <property name="uri.var.to" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               'to:', get-property('uri.var.to'),'&#xA;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.subject') = '' or  not(string(get-property('uri.var.subject')))">
            <then>
                <property name="uri.var.subject" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               'subject:', get-property('uri.var.subject'),'&#xA;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.from') = '' or  not(string(get-property('uri.var.from')))">
            <then>
                <property name="uri.var.from" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               'from:', get-property('uri.var.from'),'&#xA;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.cc') = '' or  not(string(get-property('uri.var.cc')))">
            <then>
                <property name="uri.var.cc" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               'cc:', get-property('uri.var.cc'),'&#xA;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.bcc') = '' or  not(string(get-property('uri.var.bcc')))">
            <then>
                <property name="uri.var.bcc" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               'bcc:', get-property('uri.var.bcc'),'&#xA;')"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.messageBody') = '' or  not(string(get-property('uri.var.messageBody')))">
            <then>
                <property name="uri.var.messageBody" value=""/>
            </then>
            <else>
                <property name="gmailParameters" expression="fn:concat(get-property('gmailParameters'),
               '&#xA;', get-property('uri.var.messageBody'),'&#xA;')"/>
            </else>
        </filter>
        <property name="parameters" expression="get-property('gmailParameters')"/>
        <class name="org.wso2.carbon.connector.createMail"/>
        <property name="encodedValue" expression="get-property('uri.var.encoded')"/>
        <payloadFactory media-type="json">
            <format>
                {
                }
            </format>
            <args/>
        </payloadFactory>

        <script language="js">
            <![CDATA[
                    var to = mc.getProperty('encodedValue');
                    var payload = mc.getPayloadJSON();
                    payload["raw"]=to;
                    mc.setPayloadJSON(payload);
            ]]>
        </script>
        <property name="messageType" value="application/json"
                  scope="axis2"/>
        <header name="Authorization" expression="fn:concat('Bearer ',get-property('uri.var.access_token'))"
                scope="transport"/>
        <header name="Content-Type" value="application/json" scope="transport"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/users/{uri.var.userId}/messages/send"/>
            </endpoint>
        </call>
        <property name="Accept" value="*/*" scope="transport"/>
    </sequence>
</template>