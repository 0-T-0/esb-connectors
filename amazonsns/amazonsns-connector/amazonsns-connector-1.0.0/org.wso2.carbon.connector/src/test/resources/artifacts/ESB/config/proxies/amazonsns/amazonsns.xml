<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="amazonsns"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
   <target>
      <inSequence>
         <property name="accessKeyId" expression="//accessKeyId/text()"/>
         <property name="secretAccessKey" expression="//secretAccessKey/text()"/>
         <property name="securityToken" expression="//securityToken/text()"/>
         <property name="version" expression="//version/text()"/>
         <property name="region" expression="//region/text()"/>
         <property name="topicArn" expression="//topicArn/text()"/>
         <property name="protocol" expression="//protocol/text()"/>
         <property name="endpoint" expression="//endpoint/text()"/>
         <property name="nextToken" expression="//nextToken/text()"/>
         <property name="token" expression="//token/text()"/>
         <property name="authenticateOnUnsubscribe" expression="//authenticateOnUnsubscribe/text()"/>
         <property name="subscriptionArn" expression="//subscriptionArn/text()"/>
		 <property name="customUserData" expression="//customUserData/text()"/>
         <property name="platformApplicationArn" expression="//platformApplicationArn/text()"/>
         <property name="token" expression="//token/text()"/>
         <property name="endpointArn" expression="//endpointArn/text()"/>
         <property name="name" expression="//name/text()"/>
         <property name="message" expression="//message/text()"/>
         <property name="subject" expression="//subject/text()"/>
         <property name="messageStructure" expression="//messageStructure/text()"/>
         <property name="targetArn" expression="//targetArn/text()"/>
         
         <amazonsns.init>
            <secretAccessKey>{$ctx:secretAccessKey}</secretAccessKey>
            <accessKeyId>{$ctx:accessKeyId}</accessKeyId>
            <securityToken>{$ctx:securityToken}</securityToken>
            <version>{$ctx:version}</version>
            <region>{$ctx:region}</region>
         </amazonsns.init>
         <switch source="get-property('transport', 'Action')">
            <case regex="urn:subscribe">
               <amazonsns.subscribe>
		          <protocol>{$ctx:protocol}</protocol>
		          <topicArn>{$ctx:topicArn}</topicArn>
		          <endpoint>{$ctx:endpoint}</endpoint>
		       </amazonsns.subscribe>
            </case>
            <case regex="urn:unsubscribe">
               <amazonsns.unsubscribe>
		          <subscriptionArn>{$ctx:subscriptionArn}</subscriptionArn>
		       </amazonsns.unsubscribe>
            </case>
            <case regex="urn:confirmSubscription">
               <amazonsns.confirmSubscription>
		          <token>{$ctx:token}</token>
		          <topicArn>{$ctx:topicArn}</topicArn>
		          <authenticateOnUnsubscribe>{$ctx:authenticateOnUnsubscribe}</authenticateOnUnsubscribe>
		       </amazonsns.confirmSubscription>
            </case>
            <case regex="urn:listSubscriptions">
               <amazonsns.listSubscriptions>
                  <nextToken>{$ctx:nextToken}</nextToken>
               </amazonsns.listSubscriptions>
            </case>
            <case regex="urn:listSubscriptionsByTopic">
               <amazonsns.listSubscriptionsByTopic>
		          <nextToken>{$ctx:nextToken}</nextToken>
		          <topicArn>{$ctx:topicArn}</topicArn>
		       </amazonsns.listSubscriptionsByTopic>
            </case>
			<case regex="urn:createEndpoint">
               <amazonsns.createEndpoint>
		          <customUserData>{$ctx:customUserData}</customUserData>
		          <platformApplicationArn>{$ctx:platformApplicationArn}</platformApplicationArn>
		          <token>{$ctx:token}</token>
		       </amazonsns.createEndpoint>
            </case>
            <case regex="urn:listEndpoints">
               <amazonsns.listEndpoints>
		          <platformApplicationArn>{$ctx:platformApplicationArn}</platformApplicationArn>
		          <nextToken>{$ctx:nextToken}</nextToken>
		       </amazonsns.listEndpoints>
            </case>
            <case regex="urn:deleteEndpoint">
               <amazonsns.deleteEndpoint>
            	  <endpointArn>{$ctx:endpointArn}</endpointArn>
         	   </amazonsns.deleteEndpoint>
            </case>
            <case regex="urn:createTopic">
            	<amazonsns.createTopic>
         		<name>{$ctx:name}</name>
      			</amazonsns.createTopic>
      		</case>
            <case regex="urn:listTopics">
            	<amazonsns.listTopics>
         		<nextToken>{$ctx:nextToken}</nextToken>
      			</amazonsns.listTopics>
      		</case>
      		<case regex="urn:deleteTopic">
            	<amazonsns.deleteTopic>
            	<topicArn>{$ctx:topicArn}</topicArn>
         		</amazonsns.deleteTopic>
      		</case>
      		<case regex="urn:publish">
            	<amazonsns.publish>
            		<message>{$ctx:message}</message>
            		<subject>{$ctx:subject}</subject>
            		<messageStructure>{$ctx:messageStructure}</messageStructure>
            		<topicArn>{$ctx:topicArn}</topicArn>
            		<targetArn>{$ctx:targetArn}</targetArn>
         		</amazonsns.publish>
      		</case>
         </switch>
         <respond/>
      </inSequence>
      <outSequence>
         <log/>
         <send/>
      </outSequence>
   </target>
   <description/>
</proxy>
                                