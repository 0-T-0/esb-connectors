<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- Retrieve compelted stories from Pivotaltracker API if all are 'finished' or 'deliverd' then update status of the corresponding idea in Prodpad to 'released' -->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="prodpad_releaseIdeas" transports="https" statistics="disable" trace="disable" startOnLoad="true">
   <target>
      <inSequence onError="faultHandlerSeq">

         <!-- Prodpad parameters. -->
         <property name="prodpad.apiUrl" value="https://api.prodpad.com" />
         <property name="prodpad.apiKey" expression="json-eval($.prodpad.apiKey)" />
         <property name="prodpad.idea.status.id" expression="json-eval($.prodpad.releasedStatusId)" />
         <property name="prodpad.product.name" expression="json-eval($.prodpad.productName)" />

         <!-- Pivotaltracker parameters. -->
         <property name="pivotaltracker.apiUrl" value="https://www.pivotaltracker.com" />
         <property name="pivotaltracker.userName" expression="json-eval($.pivotaltracker.userName)" />
         <property name="pivotaltracker.password" expression="json-eval($.pivotaltracker.password)" />

         <!-- List projects. -->
         <pivotaltracker.init>
            <apiUrl>{$ctx:pivotaltracker.apiUrl}</apiUrl>
            <userName>{$ctx:pivotaltracker.userName}</userName>
            <password>{$ctx:pivotaltracker.password}</password>
         </pivotaltracker.init>
         <filter source="$axis2:HTTP_SC" regex="200">
            <then>
               <pivotaltracker.listProjects>
               </pivotaltracker.listProjects>
               <property name="pivotaltracker.projects" expression="json-eval($.)" />
               <script language="js">
               <![CDATA[
                  var pivotaltrackerProjectLists = eval("("+mc.getProperty("pivotaltracker.projects")+")");
                  var prodpadProjectName = mc.getProperty("prodpad.product.name");
                  var pivotaltrackerProjectId = "";
                  for(var i = 0; i < pivotaltrackerProjectLists.length; i++) {
                     var projectName = pivotaltrackerProjectLists[i].name;                                       
                     if(projectName == prodpadProjectName) {
                        pivotaltrackerProjectId = "" + pivotaltrackerProjectLists[i].id;
                        break;
                     }
                  }
                  mc.setProperty("pivotaltracker.project.id",pivotaltrackerProjectId);                                    
                ]]>
               </script>
               <filter source="boolean(get-property('pivotaltracker.project.id'))" regex="false">
                  <then>
                     <property name="message" value="Projects have not been found." />
                     <property name="id" value="{}" />
                     <call-template target="responseHandlerTemplate">
                        <with-param name="id" value="{$ctx:id}" />
                        <with-param name="activity" value="pivotaltracker_listProjects" />
                        <with-param name="status" value="error" />
                        <with-param name="message" value="{$ctx:message}" />
                     </call-template>
                     <loopback />
                  </then>
               </filter>
            </then>
            <else>
               <property name="message" expression="//jsonObject/error" />
               <property name="id" value="{}" />
               <call-template target="responseHandlerTemplate">
                  <with-param name="id" value="{$ctx:id}" />
                  <with-param name="activity" value="pivotaltracker_listProjects" />
                  <with-param name="status" value="error" />
                  <with-param name="message" value="{$ctx:message}" />
               </call-template>
               <loopback />
            </else>
         </filter>

         <!-- List ideas. -->
         <prodpad.init>
            <apiKey>{$ctx:prodpad.apiKey}</apiKey>
            <apiUrl>{$ctx:prodpad.apiUrl}</apiUrl>
         </prodpad.init>
         <prodpad.listIdeas>
            <product>{$ctx:prodpad.product.name}</product>
         </prodpad.listIdeas>
         <filter source="$axis2:HTTP_SC" regex="200">
            <then>
               <property name="ideaCount" expression="count(//ideas)" scope="operation" />
               <filter xpath="get-property('operation', 'ideaCount') = 0 ">
                  <then>
                     <property name="id" expression="fn:concat('project_id:',get-property('pivotaltracker.project.id'))" />
                     <property name="message" value="Ideas which were not released couldn't be found." />
                     <call-template target="responseHandlerTemplate">
                        <with-param name="id" value="{$ctx:id}" />
                        <with-param name="activity" value="prodpad_listIdeas" />
                        <with-param name="status" value="skipped" />
                        <with-param name="message" value="{$ctx:message}" />
                     </call-template>
                     <loopback />
                  </then>
               </filter>
               <property name="ideaIndex" expression="0" scope="operation" />
               <!-- Idea iterater -->
               <iterate continueParent="true" id="ideaIterator" expression="//ideas" sequential="true">
                  <target>
                     <sequence>
                        <property name="prodpad.idea.id" expression="//ideas/id" />
                        <!-- List stories. -->
                        <pivotaltracker.init>
                           <apiUrl>{$ctx:pivotaltracker.apiUrl}</apiUrl>
                           <userName>{$ctx:pivotaltracker.userName}</userName>
                           <password>{$ctx:pivotaltracker.password}</password>
                        </pivotaltracker.init>
                        <pivotaltracker.listStories>
                           <projectId>{$ctx:pivotaltracker.project.id}</projectId>
                           <withLabel>{$ctx:prodpad.idea.id}</withLabel>
                        </pivotaltracker.listStories>
                        <filter source="$axis2:HTTP_SC" regex="200">
                           <then>
                              <property name="storyCount" expression="count(//jsonElement)" />
                              <filter source="get-property('storyCount') = 0" regex="false">
                                 <then>
                                    <property name="deliveredStoryCount" expression="count(//current_state[text()='delivered'])" />
                                    <property name="finishedStoryCount" expression="count(//current_state[text()='finished'])" />
                                    <property name="completedStroyCount" expression="get-property('deliveredStoryCount') + get-property('finishedStoryCount')" />
                                    <filter xpath="(get-property('completedStroyCount') = get-property('storyCount'))">
                                       <then>
                                          <!-- Update status. -->
                                          <prodpad.init>
                                             <apiKey>{$ctx:prodpad.apiKey}</apiKey>
                                             <apiUrl>{$ctx:prodpad.apiUrl}</apiUrl>
                                          </prodpad.init>
                                          <prodpad.updateIdeaStatus>
                                             <ideaId>{$ctx:prodpad.idea.id}</ideaId>
                                             <statusId>{$ctx:prodpad.idea.status.id}</statusId>
                                          </prodpad.updateIdeaStatus>
                                          <filter source="$axis2:HTTP_SC" regex="201">
                                             <then>
                                                <property name="message" value="Idea status has been updated successfully." />
                                                <property name="id" expression="fn:concat('project_id:',get-property('pivotaltracker.project.id'),',idea_id:',get-property('prodpad.idea.id'))" />
                                                <property name="status" value="success" />
                                             </then>
                                             <else>
                                                <property name="message" expression="//jsonObject/general_problem" />
                                                <property name="id" expression="fn:concat('project_id:',get-property('pivotaltracker.project.id'),',idea_id:',get-property('prodpad.idea.id'))" />
                                                <property name="status" value="error" />
                                             </else>
                                          </filter>
                                          <property name="activity" value="prodpad_updateStatus" />
                                       </then>
                                       <else>
                                          <property name="message" value="All stories have not been finished or delivered." />
                                          <property name="id" expression="fn:concat('project_id:',get-property('pivotaltracker.project.id'),',idea_id:',get-property('prodpad.idea.id'))" />
                                          <property name="activity" value="pivotaltracker_checkUserStories" />
                                          <property name="status" value="skipped" />
                                       </else>
                                    </filter>
                                    <call-template target="responseHandlerTemplate">
                                       <with-param name="id" value="{$ctx:id}" />
                                       <with-param name="activity" value="{$ctx:activity}" />
                                       <with-param name="status" value="{$ctx:status}" />
                                       <with-param name="message" value="{$ctx:message}" />
                                    </call-template>
                                 </then>
                              </filter>
                           </then>
                           <else>
                              <property name="message" expression="//jsonObject/error" />
                              <property name="id" expression="fn:concat('project_id:',get-property('pivotaltracker.project.id'),',idea_id:',get-property('prodpad.idea.id'))" />
                              <call-template target="responseHandlerTemplate">
                                 <with-param name="id" value="{$ctx:id}" />
                                 <with-param name="activity" value="pivotaltracker_listStories" />
                                 <with-param name="status" value="error" />
                                 <with-param name="message" value="{$ctx:message}" />
                              </call-template>
                              <loopback />
                           </else>
                        </filter>
                        <property name="ideaIndex" expression="get-property('operation','ideaIndex') + 1" scope="operation" />
                        <filter xpath="get-property('operation','ideaCount') = get-property('operation','ideaIndex') ">
                           <then>
                              <loopback />
                           </then>
                        </filter>
                     </sequence>
                  </target>
               </iterate>

            </then>
            <else>
               <property name="message" expression="//jsonObject/general_problem" />
               <property name="id" expression="fn:concat('product_name:',get-property('prodpad.product.name'))" />
               <call-template target="responseHandlerTemplate">
                  <with-param name="id" value="{$ctx:id}" />
                  <with-param name="activity" value="prodpad_listIdeas" />
                  <with-param name="status" value="Failed" />
                  <with-param name="message" value="{$ctx:message}" />
               </call-template>
            </else>
         </filter>
      </inSequence>
      <outSequence>
         <payloadFactory media-type="json">
            <format>
               {
               "Response":{
               "activity":"prodpad_releaseIdeas",
               "activityResponse":[$1]
               }
               }
            </format>
            <args>
               <arg expression="get-property('operation','responseString')" />
            </args>
         </payloadFactory>
         <property name="messageType" value="application/json" scope="axis2" />
         <send />
      </outSequence>
   </target>
   <description />
</proxy>