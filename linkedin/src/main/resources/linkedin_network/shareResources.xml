<template name="shareResources" xmlns="http://ws.apache.org/ns/synapse">
  <parameter name="comment" description="Text of member's comment"/>
  <parameter name="title" description="Title of shared document"/>
  <parameter name="submittedUrl" description="URL for shared content"/>
  <parameter name="submittedImageUrl" description="URL for image of shared content"/>
  <parameter name="description" description="Description of shared content"/>
  <parameter name="code" description="One of anyone: all members or connections-only: connections only"/>
  <sequence>
    <property name="uri.var.comment" expression="$func:comment"/>
    <property name="uri.var.title" expression="$func:title"/>
    <property name="uri.var.submittedUrl" expression="$func:submittedUrl"/>
    <property name="uri.var.submittedImageUrl" expression="$func:submittedImageUrl"/>
    <property name="uri.var.description" expression="$func:description"/>
    <property name="uri.var.code" expression="$func:code"/>
    
    <header name="x-li-format" value="json" scope="transport"/>
	
    <payloadFactory media-type="json">
		<format>
				{
    				"comment": "$1",
    				"content": {
      					"title": "$2",
      					"description": "$3",
      					"submitted-url": "$4",
      					"submitted-image-url": "$5"
    				},
    				"visibility": { "code": "$6" }
    			}
		</format>
		<args>
			<arg expression="get-property('uri.var.comment')" />
			<arg expression="get-property('uri.var.title')" />
			<arg expression="get-property('uri.var.description')" />
			<arg expression="get-property('uri.var.submittedUrl')" />
			<arg expression="get-property('uri.var.submittedImageUrl')" />
			<arg expression="get-property('uri.var.code')" />
		</args>

	</payloadFactory>
	
    <property name="messageType" value="application/json" scope="axis2" />
 	<property name="DISABLE_CHUNKING" value="true" scope="axis2"></property>
    <call>
      <endpoint>
        <http method="post" uri-template="{uri.var.linkedinUrl}/people/~/shares?oauth2_access_token={uri.var.accessToken}&amp;format=json"/>
      </endpoint>
    </call>
  </sequence>
</template>