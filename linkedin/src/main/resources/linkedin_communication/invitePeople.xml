<template name="invitePeople" xmlns="http://ws.apache.org/ns/synapse">
 
  <parameter name="recipient" description="Recipent ID.Only one recipent allowed " />
  <parameter name="subject" description="Subject of the invitation" />
  <parameter name="messageBody" description="body of the invitation" />
  <parameter name="authorizationName" description="Authorization name" />
  <parameter name="authorizationValue" description="Value for authorization" />
  <parameter name="inviteByEmail" description="Invite using Email or Member Id,If value is true invitaion will send based on Email.Otherwise Member Id.Default value is false" />
  <parameter name="firstName" description="First name of the recipient" />
  <parameter name="lastName" description="Last name of the recipent" />
    
  <sequence >
   <property name="uri.var.recipient" expression="$func:recipient" />
   <property name="uri.var.subject" expression="$func:subject" />
   <property name="uri.var.messageBody" expression="$func:messageBody" />
   <property name="uri.var.authorizationName" expression="$func:authorizationName" />
   <property name="uri.var.authorizationValue" expression="$func:authorizationValue" />
   <property name="uri.var.inviteByEmail" expression="$func:inviteByEmail" />
   <property name="uri.var.firstName" expression="$func:firstName" />
   <property name="uri.var.lastName" expression="$func:lastName" />

		<filter xpath="(get-property('uri.var.inviteByEmail') = 'true')">
			<then>
				<payloadFactory media-type="json">
				<format>
					{
						"recipient": {
							"values": [
								{
									"person": {
										"_path": "/people/email=$1",
										"first-name":"$2",
										"last-name":"$3"
									}
								}
							]
						},
						"subject": "$4",
						"body": "$5",
						"item-content": {
							"invitation-request": {
								"connect-type": "friend"
							}
						}
					}
				</format>
				<args>
					<arg expression="get-property('uri.var.recipient')" />
					<arg expression="get-property('uri.var.firstName')" />
					<arg expression="get-property('uri.var.lastName')" />
					<arg expression="get-property('uri.var.subject')" />
					<arg expression="get-property('uri.var.messageBody')" />
					
				</args>

				</payloadFactory>
   
			</then>
	
			<else>
				<payloadFactory media-type="json">
				<format>
					{
						"recipient": {
							"values": [
								{
									"person": {
										"_path": "/people/$1"
									}
								}
							]
						},
						"subject": "$2",
						"body": "$3",
						"item-content": {
							"invitation-request": {
								"connect-type": "friend",
								"authorization": {
									"name": "$4",
									"value": "$5"
								}
							}
						}
					}
				</format>
				<args>
					<arg expression="get-property('uri.var.recipient')" />
					<arg expression="get-property('uri.var.subject')" />
					<arg expression="get-property('uri.var.messageBody')" />
					<arg expression="get-property('uri.var.authorizationName')" />
					<arg expression="get-property('uri.var.authorizationValue')" />
				</args>

				</payloadFactory>
			</else>
		</filter>
		
 	<property name="messageType" value="application/json" scope="axis2" />
 	<property name="DISABLE_CHUNKING" value="true" scope="axis2"/>
    
   		<call>
			<endpoint>
				<http method="post"
					uri-template="{uri.var.apiUrl}/v1/people/~/mailbox?oauth2_access_token={uri.var.accessToken}&amp;format=json" />
			</endpoint>
		</call>
		
		<!-- Remove response custom header information -->
		<header name="x-li-format" scope="transport" action="remove" />
		<header name="X-LI-UUID" scope="transport" action="remove" />
		<header name="X-Li-Pop" scope="transport" action="remove" />
		<header name="X-Li-Fabric" scope="transport" action="remove" />
		<header name="x-li-request-id" scope="transport" action="remove" />
		<header name="Set-Cookie" scope="transport" action="remove" />
  </sequence>
</template>