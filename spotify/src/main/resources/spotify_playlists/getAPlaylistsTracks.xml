<?xml version="1.0" encoding="UTF-8"?>
<template name="getAPlaylistsTracks" xmlns="http://ws.apache.org/ns/synapse">

    <parameter name="userId" description="The user's Spotify user ID." />
    <parameter name="playListId" description="The Spotify ID for the playlist" />

    <!-- Optional parameters-->
    <parameter name="spotifylimit" description="number of tracks to return" />
    <parameter name="spotifyoffset" description="index of the first track to return." />
    <parameter name="fields" description="list of the fields to return" />



    <sequence>
        <property name="uri.var.userId" expression="$func:userId" />
        <property name="uri.var.playListId" expression="$func:playListId" />

        <property name="uri.var.spotifyoffset" expression="$func:spotifyoffset" />
        <property name="uri.var.spotifylimit" expression="$func:spotifylimit" />
        <property name="uri.var.fields" expression="$func:fields" />


        <filter xpath="(not(get-property('uri.var.spotifyoffset') = '' or (not(string(get-property('uri.var.spotifyoffset'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'offset=',get-property('uri.var.spotifyoffset'),'&amp;')"/>
            </then>
        </filter>

        <filter xpath="(not(get-property('uri.var.spotifylimit') = '' or (not(string(get-property('uri.var.spotifylimit'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'limit=',get-property('uri.var.spotifylimit'),'&amp;')"/>
            </then>
        </filter>

        <filter xpath="(not(get-property('uri.var.fields') = '' or (not(string(get-property('uri.var.fields'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'fields=',get-property('uri.var.fields'))"/>
            </then>
        </filter>

        <call>
            <endpoint>
                <http method="get"
                      uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/users/{uri.var.userId}/playlists/{uri.var.playListId}/tracks?{uri.var.apiParameters}" />
            </endpoint>
        </call>
    </sequence>
</template>