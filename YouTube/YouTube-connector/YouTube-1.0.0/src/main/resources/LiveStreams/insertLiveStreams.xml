<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 WSO2 Inc. licenses this file to you under the Apache License,
 Version 2.0 (the "License"); you may not use this file except
 in compliance with the License.
 You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->
<template name="insertLiveStreams" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="part"
               description="List of one or more activity resource properties that the API response will include"/>
    <parameter name="onBehalfOfContentOwner"
               description="Indicates that the user who is acting on behalf of the content owner"/>
    <parameter name="onBehalfOfContentOwnerChannel"
               description="Specifies the YouTube channel ID of the channel to which a video is being added"/>
    <parameter name="fields" description="Specifying which fields to include in a partial response"/>
    <parameter name="optionalParameters"
               description="Concatination of optional parameters"/>
    <parameter name="title"
               description="The stream's title. The value must be between 1 and 128 characters long"/>
    <parameter name="format"
               description="The format of the video stream that you are sending to YouTube"/>
    <parameter name="description"
               description="The stream's description. The value cannot be longer than 10000 characters"/>
    <parameter name="ingestionType"
               description="The method or protocol used to transmit the video stream"/>
    <sequence>
        <property name="uri.var.part" expression="$func:part"/>
        <property name="uri.var.onBehalfOfContentOwner" expression="$func:onBehalfOfContentOwner"/>
        <property name="uri.var.onBehalfOfContentOwnerChannel" expression="$func:onBehalfOfContentOwnerChannel"/>
        <property name="uri.var.fields" expression="$func:fields"/>
        <property name="parameters" value=""/>
        <property name="uri.var.title" expression="$func:title"/>
        <property name="uri.var.format" expression="$func:format"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.ingestionType" expression="$func:ingestionType"/>
        <payloadFactory media-type="json">
            <format>
                {
                    "snippet":
                    {
                        "title":"$1",
                        "description":"$2"
                    },
                    "cdn":
                    {
                        "format":"$3",
                        "ingestionType":"$4"
                    }
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.title')"/>
                <arg expression="get-property('uri.var.description')"/>
                <arg expression="get-property('uri.var.format')"/>
                <arg expression="get-property('uri.var.ingestionType')"/>
            </args>
        </payloadFactory>
        <filter
                xpath="get-property('uri.var.description') = '' or (not(string(get-property('uri.var.description'))))">
            <then>
                <script language="js"><![CDATA[
					    var payload = mc.getPayloadJSON();
                        delete payload.snippet.description;
						mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.fields') = '' or  not(string(get-property('uri.var.fields')))">
            <then>
                <property name="uri.var.fields" value=""/>
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;fields=', get-property('uri.var.fields'))"/>
            </else>
        </filter>
        <property name="uri.var.optionalParameters" expression="get-property('parameters')"/>
        <call>
            <endpoint>
                <http method="POST"
                      uri-template="{uri.var.apiUrl}/liveStreams?part={uri.var.part}&amp;{uri.var.optionalParameters}"/>
            </endpoint>
        </call>
    </sequence>
</template>